package com.sachin.example.simplegroovydsl.dao;

import com.sachin.example.simplegroovydsl.model.DslConfigEntity;
import com.sachin.example.simplegroovydsl.model.DslConfigEntityExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface DslConfigEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @SelectProvider(type=DslConfigEntitySqlProvider.class, method="countByExample")
    long countByExample(DslConfigEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @DeleteProvider(type=DslConfigEntitySqlProvider.class, method="deleteByExample")
    int deleteByExample(DslConfigEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @Delete({
        "delete from T_dsl_config",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @Insert({
        "insert into T_dsl_config (gmt_create, gmt_modify, ",
        "`name`, `describe`, ",
        "content, import_list, ",
        "`status`, schedule_status, ",
        "`operator`, version)",
        "values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, ",
        "#{name,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{importList,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=TINYINT}, #{scheduleStatus,jdbcType=TINYINT}, ",
        "#{operator,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(DslConfigEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @InsertProvider(type=DslConfigEntitySqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(DslConfigEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @SelectProvider(type=DslConfigEntitySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modify", property="gmtModify", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="describe", property="describe", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="import_list", property="importList", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="schedule_status", property="scheduleStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="operator", property="operator", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER)
    })
    List<DslConfigEntity> selectByExample(DslConfigEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, gmt_create, gmt_modify, `name`, `describe`, content, import_list, `status`, ",
        "schedule_status, `operator`, version",
        "from T_dsl_config",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modify", property="gmtModify", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="describe", property="describe", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="import_list", property="importList", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="schedule_status", property="scheduleStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="operator", property="operator", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER)
    })
    DslConfigEntity selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DslConfigEntitySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") DslConfigEntity record, @Param("example") DslConfigEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DslConfigEntitySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") DslConfigEntity record, @Param("example") DslConfigEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DslConfigEntitySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DslConfigEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_dsl_config
     *
     * @mbg.generated
     */
    @Update({
        "update T_dsl_config",
        "set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},",
          "gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},",
          "`name` = #{name,jdbcType=VARCHAR},",
          "`describe` = #{describe,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "import_list = #{importList,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=TINYINT},",
          "schedule_status = #{scheduleStatus,jdbcType=TINYINT},",
          "`operator` = #{operator,jdbcType=VARCHAR},",
          "version = #{version,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DslConfigEntity record);


    @Select({
            "select `name` from T_dsl_config where status !=2",
    })
    List<String> selectNames();
}